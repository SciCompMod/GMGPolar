import numpy

from pyccel.decorators import pure


@pure
def x(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return (1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon


@pure
def y(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))


@pure
def J_ss(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return -numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)


@pure
def J_st(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return s*numpy.sin(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)


@pure
def J_ts(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))


@pure
def J_tt(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return s*(-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))


@pure
def J_xs(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return (map2_epsilon**6*(numpy.sin(theta))**2 - map2_epsilon**6 + 5.0*map2_epsilon**5*s*(numpy.sin(theta))**2*numpy.cos(theta) - 6.0*map2_epsilon**5*s*numpy.cos(theta) + 8.0*map2_epsilon**4*s**2*(numpy.sin(theta))**2*(numpy.cos(theta))**2 - 12.0*map2_epsilon**4*s**2*(numpy.cos(theta))**2 - 8.0*map2_epsilon**4*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.sin(theta))**2 + 8.0*map2_epsilon**4*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0) + 27.0*map2_epsilon**4*(numpy.sin(theta))**2 - 27.0*map2_epsilon**4 + 4.0*map2_epsilon**3*s**3*(numpy.sin(theta))**2*(numpy.cos(theta))**3 - 8.0*map2_epsilon**3*s**3*(numpy.cos(theta))**3 - 26.0*map2_epsilon**3*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.sin(theta))**2*numpy.cos(theta) + 32.0*map2_epsilon**3*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.cos(theta) + 94.0*map2_epsilon**3*s*(numpy.sin(theta))**2*numpy.cos(theta) - 108.0*map2_epsilon**3*s*numpy.cos(theta) - 20.0*map2_epsilon**2*s**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.sin(theta))**2*(numpy.cos(theta))**2 + 32.0*map2_epsilon**2*s**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.cos(theta))**2 + 80.0*map2_epsilon**2*s**2*(numpy.sin(theta))**2*(numpy.cos(theta))**2 - 108.0*map2_epsilon**2*s**2*(numpy.cos(theta))**2 - 48.0*map2_epsilon**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.sin(theta))**2 + 48.0*map2_epsilon**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0) + 67.0*map2_epsilon**2*(numpy.sin(theta))**2 - 67.0*map2_epsilon**2 - 82.0*map2_epsilon*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.sin(theta))**2*numpy.cos(theta) + 96.0*map2_epsilon*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.cos(theta) + 121.0*map2_epsilon*s*(numpy.sin(theta))**2*numpy.cos(theta) - 134.0*map2_epsilon*s*numpy.cos(theta) - 40.0*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.sin(theta))**2 + 40.0*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0) + 41.0*(numpy.sin(theta))**2 - 41.0)/(map2_epsilon**4*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.cos(theta) - 8.0*map2_epsilon**4*numpy.cos(theta) + 4.0*map2_epsilon**3*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.cos(theta))**2 - 32.0*map2_epsilon**3*s*(numpy.cos(theta))**2 + 4.0*map2_epsilon**2*s**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.cos(theta))**3 - 32.0*map2_epsilon**2*s**2*(numpy.cos(theta))**3 + 26.0*map2_epsilon**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.cos(theta) - 48.0*map2_epsilon**2*numpy.cos(theta) + 52.0*map2_epsilon*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*(numpy.cos(theta))**2 - 96.0*map2_epsilon*s*(numpy.cos(theta))**2 + 41.0*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.cos(theta) - 40.0*numpy.cos(theta))


@pure
def J_xt(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return (1/2)*(-map2_epsilon**2*numpy.sqrt(4.0 - map2_epsilon**2)*numpy.sin(theta) - 2.0*map2_epsilon*s*numpy.sqrt(4.0 - map2_epsilon**2)*numpy.sin(theta)*numpy.cos(theta) + 2.0*numpy.sqrt(4.0 - map2_epsilon**2)*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.sin(theta) - numpy.sqrt(4.0 - map2_epsilon**2)*numpy.sin(theta))/(map2_e*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0))


@pure
def J_ys(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return (map2_epsilon**4*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.sin(theta) - 6.0*map2_epsilon**4*numpy.sin(theta) + 3.0*map2_epsilon**3*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.sin(theta)*numpy.cos(theta) - 20.0*map2_epsilon**3*s*numpy.sin(theta)*numpy.cos(theta) + 2.0*map2_epsilon**2*s**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.sin(theta)*(numpy.cos(theta))**2 - 16.0*map2_epsilon**2*s**2*numpy.sin(theta)*(numpy.cos(theta))**2 + 14.0*map2_epsilon**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.sin(theta) - 20.0*map2_epsilon**2*numpy.sin(theta) + 23.0*map2_epsilon*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.sin(theta)*numpy.cos(theta) - 36.0*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta) + 13.0*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.sin(theta) - 14.0*numpy.sin(theta))/(map2_epsilon**4*s + 4.0*map2_epsilon**3*s**2*numpy.cos(theta) + 4.0*map2_epsilon**2*s**3*(numpy.cos(theta))**2 - 6.0*map2_epsilon**2*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0) + 14.0*map2_epsilon**2*s - 12.0*map2_epsilon*s**2*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.cos(theta) + 28.0*map2_epsilon*s**2*numpy.cos(theta) - 14.0*s*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0) + 13.0*s)


@pure
def J_yt(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return (1/2)*(-numpy.sqrt(4.0 - map2_epsilon**2)*numpy.sqrt(map2_epsilon**2 + 2.0*map2_epsilon*s*numpy.cos(theta) + 1.0)*numpy.cos(theta) + 2.0*numpy.sqrt(4.0 - map2_epsilon**2)*numpy.cos(theta))/(map2_e*s)


@pure
def rho_glob(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return 0.4096*(1.0 - s)**6*(s + 1.0)**6*numpy.exp(numpy.tanh(20.0*s - 14.0))*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - (-s*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(20.0*(numpy.tanh(20.0*s - 14.0))**2 - 20.0)*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) - s*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((1/2)*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(4.0*map2_epsilon*numpy.sin(theta)*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + 2.0*(-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 2.0*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + 2.0*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 2.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - map2_e*map2_epsilon*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*map2_epsilon*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 1/2*(-2.0*map2_epsilon*(numpy.cos(theta))**3/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-2.0*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 4.0*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 4.0*map2_e*map2_epsilon*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 1/2*(-2.0*map2_epsilon*(numpy.sin(theta))**2*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*map2_epsilon*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))**(3/2) - s*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(0.8192*numpy.pi*map2_epsilon*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2) - 0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) + 0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*numpy.pi*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*numpy.pi*map2_e*map2_epsilon*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*map2_epsilon*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 1.6384*(numpy.pi)**2*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(theta)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*(1.0 - s)**6*(s + 1.0)**5*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 4.9152*numpy.pi*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 2.4576*(1.0 - s)**5*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 4.9152*numpy.pi*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + s*(-2.0*map2_epsilon*(numpy.sin(theta))**2*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*map2_epsilon*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 2.4576*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) - s*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(2.0*map2_epsilon*numpy.sin(theta)*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 2.0*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + (map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 2.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - map2_e*map2_epsilon*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*map2_epsilon*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + s*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(20.0*(numpy.tanh(20.0*s - 14.0))**2 - 20.0)*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 2.4576*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + s*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(-0.8192*numpy.pi*map2_epsilon*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2) - 0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) + 0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 4.0*numpy.pi*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 4.0*numpy.pi*map2_e*map2_epsilon*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 1.6384*(numpy.pi)**2*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(numpy.cos(theta))**2*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 1.6384*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(theta)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 4.9152*(1.0 - s)**6*(s + 1.0)**5*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 9.8304*numpy.pi*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 12.288*(1.0 - s)**6*(s + 1.0)**4*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 4.9152*(1.0 - s)**5*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 9.8304*numpy.pi*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 29.4912*(1.0 - s)**5*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) + 12.288*(1.0 - s)**4*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + s*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((1/2)*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(4.0*map2_epsilon*numpy.sin(theta)*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + 2.0*(-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 2.0*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + 2.0*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 2.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - map2_e*map2_epsilon*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*map2_epsilon*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 1/2*(-2.0*map2_epsilon*(numpy.cos(theta))**3/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-2.0*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 4.0*map2_e*map2_epsilon**2*s*numpy.sin(theta)*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 4.0*map2_e*map2_epsilon*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 1/2*(-2.0*map2_epsilon*(numpy.sin(theta))**2*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*map2_e*map2_epsilon**2*s*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*map2_epsilon*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 2.4576*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))**(3/2) - ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) - ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(0.8192*numpy.pi*map2_epsilon*s*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2) - 0.4096*s*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) + 1.6384*(numpy.pi)**2*s*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 0.8192*numpy.pi*s*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(theta)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 0.8192*numpy.pi*s*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*s*(1.0 - s)**6*(s + 1.0)**5*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 4.9152*numpy.pi*s*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 2.4576*s*(1.0 - s)**5*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 4.9152*numpy.pi*s*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*numpy.pi*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 4.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) - ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((1/2)*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(-4.0*map2_epsilon*s*(numpy.sin(theta))**2*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + 2.0*(-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*map2_epsilon*s*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 2.0*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 3.0*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 2.0*(numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 2.0*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 1/2*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(2.0*map2_epsilon*s*numpy.sin(theta)*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 4.0*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*s*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 2.0*numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 1/2*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(2.0*map2_epsilon*s*(numpy.sin(theta))**3/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 4.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 6.0*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 2.0*numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 2.4576*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))**(3/2) + (0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(2.0*map2_epsilon*s*numpy.sin(theta)*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 4.0*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*s*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 2.0*numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + (0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((1/2)*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(-4.0*map2_epsilon*s*(numpy.sin(theta))**2*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + 2.0*(-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*map2_epsilon*s*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 2.0*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 3.0*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 2.0*(numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 2.0*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 1/2*((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(2.0*map2_epsilon*s*numpy.sin(theta)*(numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 4.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 4.0*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*map2_epsilon*s*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 2.0*numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 1/2*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(2.0*map2_epsilon*s*(numpy.sin(theta))**3/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 4.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 6.0*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 2.0*numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))**(3/2) + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 2.4576*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) + ((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*(-0.8192*numpy.pi*map2_epsilon*s*(1.0 - s)**6*(s + 1.0)**6*(numpy.sin(theta))**2*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2) - 0.4096*s*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 1.6384*(numpy.pi)**2*s*(1.0 - s)**6*(s + 1.0)**6*(numpy.sin(theta))**2*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - 1.6384*numpy.pi*s*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.sin(theta)*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 0.4096*(1.0 - s)**6*(s + 1.0)**6*(-2.0*numpy.pi*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 4.0*numpy.pi*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 6.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))) - (0.4096*(1.0 - s)**6*(s + 1.0)**6*(2.0*numpy.pi*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + 2.0*numpy.pi*map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.cos(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + 0.8192*numpy.pi*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(theta)/numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) + 2.4576*(1.0 - s)**6*(s + 1.0)**5*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon) - 2.4576*(1.0 - s)**5*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon))*(-2.0*map2_epsilon*s*(numpy.sin(theta))**2*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**2 + (-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) - 2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**2*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 2.0*map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*map2_epsilon*s*(numpy.cos(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + (map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(-map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)**(3/2)) + 2.0*map2_e*map2_epsilon**2*s**2*(numpy.sin(theta))**3/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**3*(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - 3.0*map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) - map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0) - (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*numpy.exp(-numpy.tanh(20.0*s - 14.0))/numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))/(s*numpy.sqrt(-((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*(map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)))) - numpy.sin(theta)*numpy.cos(theta)/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2 + ((-map2_e*map2_epsilon*s*(numpy.sin(theta))**2/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.sin(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))*((map2_e*map2_epsilon*s*numpy.sin(theta)*numpy.cos(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))**2*numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0)) + map2_e*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))**2 + (numpy.cos(theta))**2/(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))


@pure
def rho_pole(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return 0.0


@pure
def coeffs1(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return numpy.exp(-numpy.tanh(20.0*s - 14.0))


@pure
def coeffs2(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return 1.0*numpy.exp(numpy.tanh(20.0*s - 14.0))


@pure
def phi_exact(s : float, theta : float, map2_epsilon : float, map2_e : float):
    return 0.4096*(1.0 - s)**6*(s + 1.0)**6*numpy.sin(2.0*numpy.pi*map2_e*s*numpy.sin(theta)/(numpy.sqrt(1.0 - 1/4*map2_epsilon**2)*(2.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))))*numpy.cos(2.0*numpy.pi*(1.0 - numpy.sqrt(map2_epsilon*(map2_epsilon + 2.0*s*numpy.cos(theta)) + 1.0))/map2_epsilon)
