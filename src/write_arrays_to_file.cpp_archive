// utils::disp(fVec, "RHS");
// std::ofstream myfile;
// // myfile.open("RHS.txt", std::ios_base::app);
// myfile.open("RHS.txt");
// if (myfile.is_open()) {
//     for (int i=0; i<fVec.size(); i++)
//         myfile<<fVec[i]<<"\n";
//     myfile.close();
// }
// i1=0;
// i2=row_indices.size();
// // std::cout<<"i: "<<i+1<<", j: "<<j<<", i1: "<<i1+1<<", i2: "<<i2<<"\n";
// // for (int i=i1; i<i2; i++)
// //     std::cout<<"\t"<<row_indices[i]+1<<"\t"<<col_indices[i]+1<<"\t"<<vals[i]<<"\n";
// // std::cout<<"\n";
// // std::ofstream myfile;
// myfile.open("row_indices.txt", std::ios_base::app);
// if (myfile.is_open()) {
//     for (int i=i1; i<i2; i++)
//         myfile<<row_indices[i]+1<<"\n";
//     myfile.close();
// }
// else std::cout << "Unable to open file row_indices.txt.\n";
// myfile.open("col_indices.txt", std::ios_base::app);
// if (myfile.is_open()) {
//     for (int i=i1; i<i2; i++)
//         myfile<<col_indices[i]+1<<"\n";
//     myfile.close();
// }
// else std::cout << "Unable to open file col_indices.txt.\n";
// myfile.open("vals.txt", std::ios_base::app);
// if (myfile.is_open()) {
//     for (int i=i1; i<i2; i++)
//         myfile<<vals[i]<<"\n";
//     myfile.close();
// }
// else std::cout << "Unable to open file vals.txt.\n";

// In matlab: create sparse matrix from ri/ci/vals
// A = spconvert([row_indices, col_indices, vals]);














    // int i1=0;
    // int i2=ri_prol.size();
    // std::ofstream myfile;
    // myfile.open("row_indices.txt", std::ios_base::app);
    // if (myfile.is_open()) {
    //     for (int i=i1; i<i2; i++)
    //         myfile<<ri_prol[i]+1<<"\n";
    //     myfile.close();
    // }
    // else std::cout << "Unable to open file row_indices.txt.\n";
    // myfile.open("col_indices.txt", std::ios_base::app);
    // if (myfile.is_open()) {
    //     for (int i=i1; i<i2; i++)
    //         myfile<<ci_prol[i]+1<<"\n";
    //     myfile.close();
    // }
    // else std::cout << "Unable to open file col_indices.txt.\n";
    // myfile.open("vals.txt", std::ios_base::app);
    // if (myfile.is_open()) {
    //     for (int i=i1; i<i2; i++)
    //         myfile<<v_prol[i]<<"\n";
    //     myfile.close();
    // }
    // else std::cout << "Unable to open file vals.txt.\n";









    
    // std::ofstream myfile;
    // myfile.open("zebra1.txt");
    // if (myfile.is_open()) {
    //     for (int i=0; i<zebra1.size(); i++)
    //         myfile<<zebra1[i]<<"\n";
    //     myfile.close();
    // }
    // myfile.open("zebra2.txt");
    // if (myfile.is_open()) {
    //     for (int i=0; i<zebra2.size(); i++)
    //         myfile<<zebra2[i]<<"\n";
    //     myfile.close();
    // }